(function(){
"use strict";
    
module("cnri.util.EncryptionUtil");

test("DSA sign and verify", function() {
    var dataString = 'Hello world!';
    var dataBytes = cnri.util.Encoder.Utf8.bytes(dataString);
    var privateKeyHex = '000000010000000c4453415f505249565f4b4559000000150094cd60263876cbc83eac7fbb49f91f3c4bf5a1610000008100fd7f53811d75122952df4a9c2eece4e7f611b7523cef4400c31e3f80b6512669455d402251fb593d8d58fabfc5f5ba30f6cb9b556cd7813b801d346ff26660b76b9950a5a49f9fe8047b1022c24fbba9d7feb7c61bf83b57e7c6a8a6150f04fb83f6d3c51ec3023554135a169132f675f3ae2b61d72aeff22203199dd14801c700000015009760508f15230bccb292b982a2eb840bf0581cf50000008100f7e1a085d69b3ddecbbcab5c36b857b97994afbbfa3aea82f9574c0b3d0782675159578ebad4594fe67107108180b449167123e84c281613b7cf09328cc8a6e13c167a8b547c8d28e0a3ae1e2bb3a675916ea37f0bfa213562f1fb627a01243bcca4f1bea8519089a883dfe15ae59f06928b665e807b552564014c3bfecf492a';
    var publicKeyHex = '0000000b4453415f5055425f4b4559000000000015009760508f15230bccb292b982a2eb840bf0581cf50000008100fd7f53811d75122952df4a9c2eece4e7f611b7523cef4400c31e3f80b6512669455d402251fb593d8d58fabfc5f5ba30f6cb9b556cd7813b801d346ff26660b76b9950a5a49f9fe8047b1022c24fbba9d7feb7c61bf83b57e7c6a8a6150f04fb83f6d3c51ec3023554135a169132f675f3ae2b61d72aeff22203199dd14801c70000008100f7e1a085d69b3ddecbbcab5c36b857b97994afbbfa3aea82f9574c0b3d0782675159578ebad4594fe67107108180b449167123e84c281613b7cf09328cc8a6e13c167a8b547c8d28e0a3ae1e2bb3a675916ea37f0bfa213562f1fb627a01243bcca4f1bea8519089a883dfe15ae59f06928b665e807b552564014c3bfecf492a000000806c1adef684665b4dc9b8348f1a4b4d8d9d3a1ed9848e77c5eecf73962f5f21935c985cba4eb1008a189bef26cc07b4b15a55bea9110756fcbaf5d2ba86db5d12c7a301329afce31fa473ffa83e014138adcae32a6e7299a1aa2fab85b495a4b0b0a38756667b42b2b96b7812c75306fbe510417e6939dd2933fd4341da4c5333';
    var privateKeyEncryptedBytes = cnri.util.Encoder.Hex.bytes(privateKeyHex);
    var decryptedBytes = cnri.util.EncryptionUtil.decrypt(privateKeyEncryptedBytes);
    var privateKey = cnri.util.EncryptionUtil.getPrivateKeyFromBytes(decryptedBytes);
    var sigBytes = cnri.util.EncryptionUtil.signDsaSha1(privateKey, dataBytes);
    var publicKey = cnri.util.EncryptionUtil.getPublicKeyFromBytes(cnri.util.Encoder.Hex.bytes(publicKeyHex));
    var result = cnri.util.EncryptionUtil.verifyDsaSha1(publicKey, dataBytes, sigBytes);
    ok(result);
});

test("getPrivateKeyFromBytes DSA", function() {
    var privateKeyBytesHex = "000000010000000C4453415F505249565F4B4559000000145B2ACB5369EC4EAD85D522F5AC40E571146A18EB0000008100FD7F53811D75122952DF4A9C2EECE4E7F611B7523CEF4400C31E3F80B6512669455D402251FB593D8D58FABFC5F5BA30F6CB9B556CD7813B801D346FF26660B76B9950A5A49F9FE8047B1022C24FBBA9D7FEB7C61BF83B57E7C6A8A6150F04FB83F6D3C51EC3023554135A169132F675F3AE2B61D72AEFF22203199DD14801C700000015009760508F15230BCCB292B982A2EB840BF0581CF50000008100F7E1A085D69B3DDECBBCAB5C36B857B97994AFBBFA3AEA82F9574C0B3D0782675159578EBAD4594FE67107108180B449167123E84C281613B7CF09328CC8A6E13C167A8B547C8D28E0A3AE1E2BB3A675916EA37F0BFA213562F1FB627A01243BCCA4F1BEA8519089A883DFE15AE59F06928B665E807B552564014C3BFECF492A";
    var privateKeyBytes = cnri.util.Encoder.Hex.bytes(privateKeyBytesHex);
    var offset = 4;
    var privateKey = cnri.util.EncryptionUtil.getPrivateKeyFromBytes(privateKeyBytes, offset);
    ok(privateKey.kty === "DSA");
    var q = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(privateKey.q));
    ok(q === "9760508F15230BCCB292B982A2EB840BF0581CF5");
    var p = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(privateKey.p));
    ok(p === "FD7F53811D75122952DF4A9C2EECE4E7F611B7523CEF4400C31E3F80B6512669455D402251FB593D8D58FABFC5F5BA30F6CB9B556CD7813B801D346FF26660B76B9950A5A49F9FE8047B1022C24FBBA9D7FEB7C61BF83B57E7C6A8A6150F04FB83F6D3C51EC3023554135A169132F675F3AE2B61D72AEFF22203199DD14801C7");
    var g = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(privateKey.g));
    ok(g === "F7E1A085D69B3DDECBBCAB5C36B857B97994AFBBFA3AEA82F9574C0B3D0782675159578EBAD4594FE67107108180B449167123E84C281613B7CF09328CC8A6E13C167A8B547C8D28E0A3AE1E2BB3A675916EA37F0BFA213562F1FB627A01243BCCA4F1BEA8519089A883DFE15AE59F06928B665E807B552564014C3BFECF492A");
    var x = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(privateKey.x));
    ok(x === "5B2ACB5369EC4EAD85D522F5AC40E571146A18EB");    
});

test("getPrivateKeyFromBytes RSA", function() {
    var privateKeyBytesHex
    var privateKeyBytes = cnri.util.Encoder.Hex.bytes(privateKeyBytesHex);
    var offset = 4;
    var privateKey = cnri.util.EncryptionUtil.getPrivateKeyFromBytes(privateKeyBytes, offset);
    ok(privateKey.kty === "RSA", "type");
    var d = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(privateKey.d));
    ok(d === "3D653CA98B45EAEFA068BE0844D28D5FA9E5FE6E3400632CC92F865F8DA1A1E6DDF5278C6473EEC0E3B86B2F9BC45FE71E69A8CB2951198A845E90FCDC71A416874034382813EF843CD2231527A20114E41031FE7870B47B39C8AE863FE013661EDBC25C71D9B655D5C4ED3B64D4E0A7CD192BCED936B1F5C9BAB7A5EF6EF801");
    var e = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(privateKey.e));
    ok(e === "010001");
    var n = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(privateKey.n));
    ok(n === "C0A63AF73F69440B9C935BF6EA700E57E5FC85E5E5D9CC0B6D8E97BB048027539D99D80FA3D4CBEAF2C1029305B628E218C4C9F4E580E7C03CE7F7E742251EEBCC5152912177BE99EE37E4D3402F3475907FCA471071A0F04EDF0E3822525D4E0478ED8CD082A3F97F45A24E954465254F75C9E2B90F0578A34D1A65A424FD4B");
});

test("getPublicKeyFromBytes", function() {
    var publicKeyBytesHex = "0000000B5253415F5055425F4B45590000000000030100010000008100C0A63AF73F69440B9C935BF6EA700E57E5FC85E5E5D9CC0B6D8E97BB048027539D99D80FA3D4CBEAF2C1029305B628E218C4C9F4E580E7C03CE7F7E742251EEBCC5152912177BE99EE37E4D3402F3475907FCA471071A0F04EDF0E3822525D4E0478ED8CD082A3F97F45A24E954465254F75C9E2B90F0578A34D1A65A424FD4B00000000";
    var publicKeyBytes = cnri.util.Encoder.Hex.bytes(publicKeyBytesHex);
    var offset = 0;
    var publicKey = cnri.util.EncryptionUtil.getPublicKeyFromBytes(publicKeyBytes, offset);
    ok(publicKey.kty === "RSA");
    var e = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(publicKey.e));
    ok(e === "010001");
    var n = cnri.util.Encoder.Hex.string(cnri.util.Encoder.Base64Url.bytes(publicKey.n));
    ok(n === "C0A63AF73F69440B9C935BF6EA700E57E5FC85E5E5D9CC0B6D8E97BB048027539D99D80FA3D4CBEAF2C1029305B628E218C4C9F4E580E7C03CE7F7E742251EEBCC5152912177BE99EE37E4D3402F3475907FCA471071A0F04EDF0E3822525D4E0478ED8CD082A3F97F45A24E954465254F75C9E2B90F0578A34D1A65A424FD4B");
});

test("SHA-1", function () {
    equal(cnri.util.Encoder.Hex.string(cnri.util.EncryptionUtil.digestSha1(cnri.util.Encoder.Utf8.bytes("abc"))), "a9993e36 4706816a ba3e2571 7850c26c 9cd0d89d".replace(/ /g,'').toUpperCase());
});

test("SHA-256", function () {
    equal(cnri.util.Encoder.Hex.string(cnri.util.EncryptionUtil.digestSha256(cnri.util.Encoder.Utf8.bytes("abc"))), "BA7816BF 8F01CFEA 414140DE 5DAE2223 B00361A3 96177A9C B410FF61 F20015AD".replace(/ /g,''));
});

/*end*/})();